{"version":3,"file":"../style.css","sources":["style.scss","_grid.scss","../../node_modules/avalanche-css/_avalanche.scss","_variables.scss","_mixins.scss"],"sourcesContent":["//vendor\n@import 'grid';\n\n//ours\n@import 'variables';\n@import 'mixins';\n\nbody {\n  background: #fbfbfb;\n  color: #494949;\n  margin: 0 auto;\n  max-width: 1020px;\n  padding: 0 10px;\n}\n","\n@import \"../../node_modules/avalanche-css/avalanche\";","/*! Avalanche | MIT License | @colourgarden */\n\n/**\n * SETTINGS\n */\n$av-namespace:              'grid' !default;      // Prefix namespace for grid layout and cells\n$av-element-name:           'cell' !default;      // Element/cell name\n$av-element-class-chain:    '__' !default;        // Chain characters between block and element\n$av-modifier-class-chain:   '--' !default;        // Chain characters between block and modifier\n$av-breakpoint-class-chain: '--' !default;        // Chain characters between width and breakpoint\n\n$av-gutter:                 20px !default;        // Gutter between grid cells\n\n$av-width-class-namespace:  '' !default;          // Prefix namespace for width classes. For example; 'col-'\n$av-width-class-style:      'fraction' !default;  // Width class naming style. Can be 'fraction', 'percentage' or 'fragment'\n$av-widths: (\n  2,\n  3,\n  4\n) !default; // Width denominator values. 2 = 1/2, 3 = 1/3 etc. Add/remove as appropriate\n\n$av-enable-responsive:  true !default;\n$av-breakpoints:  (\n  \"thumb\":            \"screen and (max-width: 499px)\",\n  \"handheld\":         \"screen and (min-width: 500px) and (max-width: 800px)\",\n  \"handheld-and-up\":  \"screen and (min-width: 500px)\",\n  \"pocket\":           \"screen and (max-width: 800px)\",\n  \"lap\":              \"screen and (min-width: 801px) and (max-width: 1024px)\",\n  \"lap-and-up\":       \"screen and (min-width: 801px)\",\n  \"portable\":         \"screen and (max-width: 1024px)\",\n  \"desk\":             \"screen and (min-width: 1025px)\",\n  \"widescreen\":       \"screen and (min-width: 1160px)\",\n  \"retina\":           \"screen and (-webkit-min-device-pixel-ratio: 2), screen and (min-resolution: 192dpi), screen and (min-resolution: 2dppx)\"\n) !default; // Responsive breakpoints. Add/remove as appropriate\n\n// Enable/disable grid layouts\n$av-enable-grid-center:       false !default;\n$av-enable-grid-cell-center:  false !default;\n$av-enable-grid-right:        false !default;\n$av-enable-grid-middle:       false !default;\n$av-enable-grid-bottom:       false !default;\n$av-enable-grid-flush:        false !default;\n$av-enable-grid-tiny:         false !default;\n$av-enable-grid-small:        false !default;\n$av-enable-grid-large:        false !default;\n$av-enable-grid-huge:         false !default;\n$av-enable-grid-auto:         false !default;\n$av-enable-grid-rev:          false !default;\n\n/**\n * LOGIC aka THE MAGIC\n */\n@function escape-numerator($numerator, $namespace: '') {\n  @if ($namespace == '') {\n    $numerator-as-string: inspect($numerator);\n    $escaped-numerator: '';\n\n    // Loop through all digits in the numerator and escape individually\n    @for $i from 1 through str-length($numerator-as-string) {\n      $digit: str-slice($numerator-as-string, $i, $i);\n      $escaped-numerator: $escaped-numerator+\\3+$digit;\n    }\n\n    @return $escaped-numerator;\n  }\n\n  @else {\n    @return $numerator;\n  }\n}\n\n@function av-create-width-class-name($style, $numerator, $denominator, $breakpoint-alias) {\n\n  $class-name: null;\n\n  @if $style == 'fraction' or $style == 'fragment' {\n    // Set delimiter as slash or text\n    $delimiter: if($style == 'fraction', \\/, -of-);\n    $class-name: #{$av-width-class-namespace}#{escape-numerator($numerator, $av-width-class-namespace)}#{$delimiter}#{$denominator}#{$breakpoint-alias};\n  }\n\n  @else {\n    @if $av-width-class-namespace == '' {\n      @error \"Percentage value class names require a namespace to be set (see $av-width-class-namespace). Selective escaping (e.g. the 5 of 50) cannot be done.\";\n    }\n    $class-width: floor(($numerator / $denominator) * 100);\n    $class-name: #{$av-width-class-namespace}#{$class-width}#{$breakpoint-alias};\n  }\n\n  @return $class-name;\n}\n\n@function avCreateBlockClassName($modifier: '') {\n  @if $modifier == '' {\n    @return #{$av-namespace};\n  }\n\n  @return #{$av-namespace}#{$av-modifier-class-chain}#{$modifier};\n}\n\n@function avCreateElementClassName($modifier: '') {\n  @if $modifier == '' {\n    @return #{$av-namespace}#{$av-element-class-chain}#{$av-element-name};\n  }\n\n  @return #{$av-namespace}#{$av-element-class-chain}#{$av-element-name}#{$av-modifier-class-chain}#{$modifier};\n}\n\n@mixin av-create-widths($widths, $breakpoint-alias: null) {\n\n  // Initialise an empty utility map that will eventually contain all our classes\n  $pseudo-class-map: ();\n\n  // Loop widths\n  @each $denominator in $widths {\n\n    // If 1=1, 2=2, 3=3; @for will skip over so create 1/1 class manually\n    @if ($denominator == 1) {\n\n      // Create 1/1 class\n      $class-name: av-create-width-class-name($av-width-class-style, 1, 1, $breakpoint-alias);\n\n      .#{$class-name} {\n        width: 100%;\n      }\n    }\n\n    @else {\n\n      // Loop widths as fractions\n      @for $numerator from 1 to $denominator {\n\n        // Create class name and set width value\n        $class-name: av-create-width-class-name($av-width-class-style, $numerator, $denominator, $breakpoint-alias);\n        $width-value: percentage($numerator / $denominator);\n\n        // Is this width already in our utility map?\n        $duplicate: map-get($pseudo-class-map, $width-value);\n\n        // Create width class\n        .#{$class-name} {\n\n          // If this width is in utility map, @extend the duplicate, else create a new one\n          @if $duplicate {\n            @extend .#{$duplicate};\n          }\n\n          @else {\n            width: $width-value;\n          }\n        }\n\n        // Add this class to utility map\n        $add-class: ($width-value: $class-name);\n        $pseudo-class-map: map-merge($pseudo-class-map, $add-class);\n      }\n    }\n  }\n}\n\n@mixin av-mq($alias) {\n\n  // Search breakpoint map for alias\n  $query: map-get($av-breakpoints, $alias);\n\n  // If alias exists, print out media query\n  @if $query {\n    @media #{$query} {\n      @content;\n    }\n  }\n\n  @else {\n    @error \"No breakpoint found for #{$alias}\";\n  }\n}\n\n/**\n * GRID LAYOUT\n */\n.#{avCreateBlockClassName()} {\n  display: block;\n  list-style: none;\n  padding: 0;\n  margin: 0;\n  margin-left: -($av-gutter);\n  font-size: 0;\n}\n\n.#{avCreateElementClassName()} {\n  box-sizing: border-box;\n  display: inline-block;\n  width: 100%;\n  padding: 0;\n  padding-left: $av-gutter;\n  margin: 0;\n  vertical-align: top;\n  font-size: 1rem;\n}\n\n@if $av-enable-grid-center {\n  .#{avCreateBlockClassName('center')} {\n    text-align: center;\n\n    > .#{avCreateElementClassName()} {\n      text-align: left;\n    }\n  }\n}\n\n@if $av-enable-grid-cell-center {\n  .#{avCreateElementClassName('center')} {\n    display: block;\n    margin: 0 auto;\n  }\n}\n\n@if $av-enable-grid-right {\n  .#{avCreateBlockClassName('right')} {\n    text-align: right;\n\n    > .#{avCreateElementClassName()} {\n      text-align: left;\n    }\n  }\n}\n\n@if $av-enable-grid-middle {\n  .#{avCreateBlockClassName('middle')} {\n    > .#{avCreateElementClassName()} {\n      vertical-align: middle;\n    }\n  }\n}\n\n@if $av-enable-grid-bottom {\n  .#{avCreateBlockClassName('bottom')} {\n    > .#{avCreateElementClassName()} {\n      vertical-align: bottom;\n    }\n  }\n}\n\n@if $av-enable-grid-flush {\n  .#{avCreateBlockClassName('flush')} {\n    margin-left: 0;\n\n    > .#{avCreateElementClassName()} {\n      padding-left: 0;\n    }\n  }\n}\n\n@if $av-enable-grid-tiny {\n  .#{avCreateBlockClassName('tiny')} {\n    margin-left: -($av-gutter / 4);\n\n    > .#{avCreateElementClassName()} {\n      padding-left: ($av-gutter / 4);\n    }\n  }\n}\n\n@if $av-enable-grid-small {\n  .#{avCreateBlockClassName('small')} {\n    margin-left: -($av-gutter / 2);\n\n    > .#{avCreateElementClassName()} {\n      padding-left: ($av-gutter / 2);\n    }\n  }\n}\n\n@if $av-enable-grid-large {\n  .#{avCreateBlockClassName('large')} {\n    margin-left: -($av-gutter * 2);\n\n    > .#{avCreateElementClassName()} {\n      padding-left: ($av-gutter * 2);\n    }\n  }\n}\n\n@if $av-enable-grid-huge {\n  .#{avCreateBlockClassName('huge')} {\n    margin-left: -($av-gutter * 4);\n\n    > .#{avCreateElementClassName()} {\n      padding-left: ($av-gutter * 4);\n    }\n  }\n}\n\n@if $av-enable-grid-auto {\n  .#{avCreateBlockClassName('auto')} {\n    > .#{avCreateElementClassName()} {\n      width: auto;\n    }\n  }\n}\n\n@if $av-enable-grid-rev {\n  .#{avCreateBlockClassName('rev')} {\n    direction: rtl;\n\n    > .#{avCreateElementClassName()} {\n      direction: ltr;\n    }\n  }\n}\n\n/**\n * GRID WIDTHS\n */\n\n// Loop default widths\n@include av-create-widths($av-widths);\n\n// If responsive flag enabled, loop breakpoint widths\n@if $av-enable-responsive {\n  @each $alias, $query in $av-breakpoints {\n\n    // Create each media query\n    @media #{$query} {\n      @include av-create-widths($av-widths, #{$av-breakpoint-class-chain}#{$alias});\n    }\n  }\n}\n","// base stuff in here\n","// mixins here\n"],"names":[],"mappings":"AEAA,8CAA8C,AAoL9C,AAAA,KAAK,AAAwB,CAC3B,OAAO,CAAE,KAAK,CACd,UAAU,CAAE,IAAI,CAChB,OAAO,CAAE,CAAC,CACV,MAAM,CAAE,CAAC,CACT,WAAW,CA9Ke,KAAI,CA+K9B,SAAS,CAAE,CAAC,CACb,AAED,AAAA,WAAW,AAAoB,CAC7B,UAAU,CAAE,UAAU,CACtB,OAAO,CAAE,YAAY,CACrB,KAAK,CAAE,IAAI,CACX,OAAO,CAAE,CAAC,CACV,YAAY,CAvLc,IAAI,CAwL9B,MAAM,CAAE,CAAC,CACT,cAAc,CAAE,GAAG,CACnB,SAAS,CAAE,IAAI,CAChB,AA1DO,AAAA,OAAO,CAAP,OAAO,AAAS,CAQZ,KAAK,CAdK,GAAqC,CAgBlD,AAVD,AAAA,OAAO,AAAS,CAQZ,KAAK,CAdK,SAAqC,CAgBlD,AAVD,AAAA,OAAO,AAAS,CAQZ,KAAK,CAdK,SAAqC,CAgBlD,AAVD,AAAA,OAAO,AAAS,CAQZ,KAAK,CAdK,GAAqC,CAgBlD,AAVD,AAAA,OAAO,AAAS,CAQZ,KAAK,CAdK,GAAqC,CAgBlD,AA6KL,MAAM,CAAC,MAAM,MAAM,SAAS,EAAE,KAAK,EAvL/B,AAAA,cAAc,CAAd,cAAc,AAAE,CAQZ,KAAK,CAdK,GAAqC,CAgBlD,AAVD,AAAA,cAAc,AAAE,CAQZ,KAAK,CAdK,SAAqC,CAgBlD,AAVD,AAAA,cAAc,AAAE,CAQZ,KAAK,CAdK,SAAqC,CAgBlD,AAVD,AAAA,cAAc,AAAE,CAQZ,KAAK,CAdK,GAAqC,CAgBlD,AAVD,AAAA,cAAc,AAAE,CAQZ,KAAK,CAdK,GAAqC,CAgBlD,CA6KL,MAAM,CAAC,MAAM,MAAM,SAAS,EAAE,KAAK,OAAO,SAAS,EAAE,KAAK,EAvLtD,AAAA,iBAAiB,CAAjB,iBAAiB,AAAD,CAQZ,KAAK,CAdK,GAAqC,CAgBlD,AAVD,AAAA,iBAAiB,AAAD,CAQZ,KAAK,CAdK,SAAqC,CAgBlD,AAVD,AAAA,iBAAiB,AAAD,CAQZ,KAAK,CAdK,SAAqC,CAgBlD,AAVD,AAAA,iBAAiB,AAAD,CAQZ,KAAK,CAdK,GAAqC,CAgBlD,AAVD,AAAA,iBAAiB,AAAD,CAQZ,KAAK,CAdK,GAAqC,CAgBlD,CA6KL,MAAM,CAAC,MAAM,MAAM,SAAS,EAAE,KAAK,EAvL/B,AAAA,wBAAwB,CAAxB,wBAAwB,AAAR,CAQZ,KAAK,CAdK,GAAqC,CAgBlD,AAVD,AAAA,wBAAwB,AAAR,CAQZ,KAAK,CAdK,SAAqC,CAgBlD,AAVD,AAAA,wBAAwB,AAAR,CAQZ,KAAK,CAdK,SAAqC,CAgBlD,AAVD,AAAA,wBAAwB,AAAR,CAQZ,KAAK,CAdK,GAAqC,CAgBlD,AAVD,AAAA,wBAAwB,AAAR,CAQZ,KAAK,CAdK,GAAqC,CAgBlD,CA6KL,MAAM,CAAC,MAAM,MAAM,SAAS,EAAE,KAAK,EAvL/B,AAAA,eAAe,CAAf,eAAe,AAAC,CAQZ,KAAK,CAdK,GAAqC,CAgBlD,AAVD,AAAA,eAAe,AAAC,CAQZ,KAAK,CAdK,SAAqC,CAgBlD,AAVD,AAAA,eAAe,AAAC,CAQZ,KAAK,CAdK,SAAqC,CAgBlD,AAVD,AAAA,eAAe,AAAC,CAQZ,KAAK,CAdK,GAAqC,CAgBlD,AAVD,AAAA,eAAe,AAAC,CAQZ,KAAK,CAdK,GAAqC,CAgBlD,CA6KL,MAAM,CAAC,MAAM,MAAM,SAAS,EAAE,KAAK,OAAO,SAAS,EAAE,MAAM,EAvLvD,AAAA,YAAY,CAAZ,YAAY,AAAI,CAQZ,KAAK,CAdK,GAAqC,CAgBlD,AAVD,AAAA,YAAY,AAAI,CAQZ,KAAK,CAdK,SAAqC,CAgBlD,AAVD,AAAA,YAAY,AAAI,CAQZ,KAAK,CAdK,SAAqC,CAgBlD,AAVD,AAAA,YAAY,AAAI,CAQZ,KAAK,CAdK,GAAqC,CAgBlD,AAVD,AAAA,YAAY,AAAI,CAQZ,KAAK,CAdK,GAAqC,CAgBlD,CA6KL,MAAM,CAAC,MAAM,MAAM,SAAS,EAAE,KAAK,EAvL/B,AAAA,mBAAmB,CAAnB,mBAAmB,AAAH,CAQZ,KAAK,CAdK,GAAqC,CAgBlD,AAVD,AAAA,mBAAmB,AAAH,CAQZ,KAAK,CAdK,SAAqC,CAgBlD,AAVD,AAAA,mBAAmB,AAAH,CAQZ,KAAK,CAdK,SAAqC,CAgBlD,AAVD,AAAA,mBAAmB,AAAH,CAQZ,KAAK,CAdK,GAAqC,CAgBlD,AAVD,AAAA,mBAAmB,AAAH,CAQZ,KAAK,CAdK,GAAqC,CAgBlD,CA6KL,MAAM,CAAC,MAAM,MAAM,SAAS,EAAE,MAAM,EAvLhC,AAAA,iBAAiB,CAAjB,iBAAiB,AAAD,CAQZ,KAAK,CAdK,GAAqC,CAgBlD,AAVD,AAAA,iBAAiB,AAAD,CAQZ,KAAK,CAdK,SAAqC,CAgBlD,AAVD,AAAA,iBAAiB,AAAD,CAQZ,KAAK,CAdK,SAAqC,CAgBlD,AAVD,AAAA,iBAAiB,AAAD,CAQZ,KAAK,CAdK,GAAqC,CAgBlD,AAVD,AAAA,iBAAiB,AAAD,CAQZ,KAAK,CAdK,GAAqC,CAgBlD,CA6KL,MAAM,CAAC,MAAM,MAAM,SAAS,EAAE,MAAM,EAvLhC,AAAA,aAAa,CAAb,aAAa,AAAG,CAQZ,KAAK,CAdK,GAAqC,CAgBlD,AAVD,AAAA,aAAa,AAAG,CAQZ,KAAK,CAdK,SAAqC,CAgBlD,AAVD,AAAA,aAAa,AAAG,CAQZ,KAAK,CAdK,SAAqC,CAgBlD,AAVD,AAAA,aAAa,AAAG,CAQZ,KAAK,CAdK,GAAqC,CAgBlD,AAVD,AAAA,aAAa,AAAG,CAQZ,KAAK,CAdK,GAAqC,CAgBlD,CA6KL,MAAM,CAAC,MAAM,MAAM,SAAS,EAAE,MAAM,EAvLhC,AAAA,mBAAmB,CAAnB,mBAAmB,AAAH,CAQZ,KAAK,CAdK,GAAqC,CAgBlD,AAVD,AAAA,mBAAmB,AAAH,CAQZ,KAAK,CAdK,SAAqC,CAgBlD,AAVD,AAAA,mBAAmB,AAAH,CAQZ,KAAK,CAdK,SAAqC,CAgBlD,AAVD,AAAA,mBAAmB,AAAH,CAQZ,KAAK,CAdK,GAAqC,CAgBlD,AAVD,AAAA,mBAAmB,AAAH,CAQZ,KAAK,CAdK,GAAqC,CAgBlD,CA6KL,MAAM,CAAC,MAAM,OAAO,6BAA6B,EAAE,CAAC,GAAG,MAAM,MAAM,cAAc,EAAE,MAAM,GAAG,MAAM,MAAM,cAAc,EAAE,KAAK,EAvLzH,AAAA,eAAe,CAAf,eAAe,AAAC,CAQZ,KAAK,CAdK,GAAqC,CAgBlD,AAVD,AAAA,eAAe,AAAC,CAQZ,KAAK,CAdK,SAAqC,CAgBlD,AAVD,AAAA,eAAe,AAAC,CAQZ,KAAK,CAdK,SAAqC,CAgBlD,AAVD,AAAA,eAAe,AAAC,CAQZ,KAAK,CAdK,GAAqC,CAgBlD,AAVD,AAAA,eAAe,AAAC,CAQZ,KAAK,CAdK,GAAqC,CAgBlD,CF/IT,AAAA,IAAI,AAAC,CACH,UAAU,CAAE,OAAO,CACnB,KAAK,CAAE,OAAO,CACd,MAAM,CAAE,MAAM,CACd,SAAS,CAAE,MAAM,CACjB,OAAO,CAAE,MAAM,CAChB"}